import pygame
import sys
from dice_class import DiceGame  # Import your game logic
import random

# Constants
WINDOW_WIDTH = 800
WINDOW_HEIGHT = 600
DICE_SIZE = 100
BUTTON_WIDTH = 200
BUTTON_HEIGHT = 50
FONT_SIZE = 32
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Initialize Pygame
pygame.init()
window = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption("421 Dice Game")
font = pygame.font.SysFont(None, FONT_SIZE)


def draw_text(text, font, color, x, y):
    text_surface = font.render(text, True, color)
    text_rect = text_surface.get_rect(center=(x, y))
    window.blit(text_surface, text_rect)


def main():
    game = None
    running = True
    dice = [1, 1, 1]  # Initial roll
    round_score = 0
    message = ""

    while running:
        window.fill(WHITE)

        if game is None:
            draw_text("Choose the number of rounds (3/5/8):", font, BLACK, WINDOW_WIDTH // 2, WINDOW_HEIGHT // 2 - 50)
            draw_text("Press 3, 5, or 8 to start", font, BLACK, WINDOW_WIDTH // 2, WINDOW_HEIGHT // 2)
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_3:
                        game = DiceGame(3)
                        message = ""  # Reset the message when starting a new game
                    elif event.key == pygame.K_5:
                        game = DiceGame(5)
                        message = ""  # Reset the message when starting a new game
                    elif event.key == pygame.K_8:
                        game = DiceGame(8)
                        message = ""  # Reset the message when starting a new game
        else:
            draw_text(f"Round {game.round_count + 1} / {game.max_rounds}", font, BLACK, WINDOW_WIDTH // 2, 50)
            draw_text(f"Total score: {game.total_score}", font, BLACK, WINDOW_WIDTH // 2, 100)

            # Draw dice
            for i, value in enumerate(dice):
                draw_text(str(value), font, BLACK, 150 + i * 150, 200)
                pygame.draw.rect(window, BLACK, (100 + i * 150, 150, DICE_SIZE, DICE_SIZE), 2)

            # Draw button
            if game.round_count < game.max_rounds - 1:
                button_text = "Roll Dice"
            else:
                button_text = "Finish Game"
            roll_button = pygame.Rect((WINDOW_WIDTH - BUTTON_WIDTH) // 2, 400, BUTTON_WIDTH, BUTTON_HEIGHT)
            pygame.draw.rect(window, BLACK, roll_button)
            draw_text(button_text, font, WHITE, roll_button.centerx, roll_button.centery)

            draw_text(message, font, BLACK, WINDOW_WIDTH // 2, 500)

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False
                if event.type == pygame.MOUSEBUTTONDOWN:
                    if roll_button.collidepoint(event.pos):
                        dice, round_score, game_over = game.play_round()
                        if game.total_score == 421:
                            message = "You rolled 421 and won the game! Choose the number of rounds (3/5/8) to start a new game."
                            game = None
                        else:
                            message = f"Round score: {round_score}"
                            if game_over:
                                message = f"Game Over! Final Score: {game.total_score}."
                                game = None
                            elif game.round_count >= game.max_rounds:
                                message = f"Game Over! Final Score: {game.total_score}."
                                game = None

        pygame.display.update()

    pygame.quit()
    sys.exit()


if __name__ == "__main__":
    main()


-------------

import random

class DiceGame:
    def __init__(self, rounds):
        self.total_score = 0
        self.round_count = 0
        self.max_rounds = rounds
        self.game_over = False

    def roll_dice(self):
        dice = [random.randint(1, 6) for _ in range(3)]
        while True:
            if 6 in dice:
                print("At least one die showed a 6! Rerolling...")
                dice = [random.randint(1, 6) if die == 6 else die for die in dice]
                print("After rerolling, you got:", dice)
                if 6 not in dice:
                    break
            else:
                break
        return dice

    def calculate_score(self, dice):
        if sorted(dice) == [1, 2, 4]:
            self.game_over = True
            return 21
        elif dice[0] == dice[1] == dice[2]:
            return 20
        else:
            return max(dice)

    def play_round(self):
        dice = self.roll_dice()
        round_score = self.calculate_score(dice)
        self.total_score += round_score
        self.round_count += 1
        return dice, round_score, self.game_over

    def reset(self):
        self.total_score = 0
        self.round_count = 0
        self.game_over = False



